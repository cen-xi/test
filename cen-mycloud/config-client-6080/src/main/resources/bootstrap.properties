#心得：
#需要提前知道远程配置中心的服务名称 和 远程配置文件名
#
#
#
#工程名/项目名/应用名/服务名
spring.application.name=config-client-6080
#端口号
server.port=6080
#获取指定配置文件名称 ，多个则以英文符号 , 隔开，不可有空格
spring.cloud.config.name=gittest
#  ,configText ,gittest2
#经过测试发现，在不同文件【可能是properties或者yml】，如果其中有相同的字段，那么左边的文件的这个字段的值会被右边文件的覆盖，不区分properties和yml优先级
#
#
#获取配置信息，客户端不需要管这个文件是从git来的还是在服务端的本地文件
#
#获取配置的策略 , 读取文件：dev开发环境、test测试、pro生产
spring.cloud.config.profile=dev
#获取配置文件的分支，默认是master。如果是是本地获取的话，则无用,
spring.cloud.config.label=master
#开启配置信息发现
spring.cloud.config.discovery.enabled=true
#指定配置中心服务端的service-id，便于扩展为高可用配置集群，不区分大小写
spring.cloud.config.discovery.serviceId=config-server-6001
#使用这个写法也一样，至于为啥有两种写法，还不清除
#spring.cloud.config.discovery.service-id=config-service
#
#是否启动快速失败功能，功能开启则优先判断config server是否正常,可开可不开
#spring.cloud.config.fail-fast=true
#
#
#这个是设置与Eureka Server交互的地址，客户端的查询服务和注册服务都需要依赖这个地址。
eureka.client.serviceUrl.defaultZone=http://localhost:7001/eureka/
## rabbitmq 心跳检查
#eureka.client.healthcheck.enabled=true


#actuator设置
#springboot 1.5.X 以上默认开通了安全认证，这里可加可不加，不影响
#management.security.enabled=false
#springboot 2.x 默认只开启了info、health的访问接口，*代表开启所有访问接口
management.endpoints.web.exposure.include=*
#
#可以使用 window指令框 发送post请求 刷新配置文件  ，curl -X POST http://localhost:6080/actuator/refresh
#
#

##
## spring cloud bus 刷新配置
##rabbitmq 服务所在ip
#使用 localhost 会出错 ，使用 127.0.0.1 则没问题
spring.rabbitmq.host=127.0.0.1
#默认端口 5672
spring.rabbitmq.port=5672
#默认账户
spring.rabbitmq.password=guest
#默认密码
spring.rabbitmq.username=guest
##
##
### 消息总线相关
spring.cloud.bus.enabled=true
## 开启消息跟踪
spring.cloud.bus.trace.enabled=true

#
##//
#
###  http://localhost:6080/actuator/bus-refresh
#




